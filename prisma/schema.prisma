generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cart_items {
  id         Int      @id @default(autoincrement())
  cart_id    Int
  product_id Int
  quantity   Int
  carts      carts    @relation(fields: [cart_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "cart_items_ibfk_1")
  products   products @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cart_items_ibfk_2")

  @@index([cart_id], map: "cart_id")
  @@index([product_id], map: "product_id")
}

model carts {
  id         Int          @id @default(autoincrement())
  user_id    Int
  created_at DateTime?    @default(now()) @db.Timestamp(0)
  cart_items cart_items[]
  users      users        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "carts_ibfk_1")

  @@index([user_id], map: "user_id")
}

model order_items {
  id                Int      @id @default(autoincrement())
  order_id          Int
  product_id        Int
  quantity          Int
  price_at_purchase Decimal  @db.Decimal(10, 2)
  orders            orders   @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "order_items_ibfk_1")
  products          products @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_items_ibfk_2")

  @@index([order_id], map: "order_id")
  @@index([product_id], map: "product_id")
}

model orders {
  id           Int           @id @default(autoincrement())
  user_id      Int
  total_amount Decimal       @db.Decimal(10, 2)
  status       String?       @default("pending") @db.VarChar(50)
  created_at   DateTime?     @default(now()) @db.Timestamp(0)
  order_items  order_items[]
  users        users         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orders_ibfk_1")

  @@index([user_id], map: "user_id")
}

model products {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(100)
  description String?       @db.Text
  price       Decimal       @db.Decimal(10, 2)
  image_url   String?       @db.VarChar(255)
  quality     String?       @db.VarChar(50)
  size        String?       @db.VarChar(50)
  stock       Int?          @default(0)
  rating      Float?        @default(0)
  reviews     Int?          @default(0)
  badge       String?       @db.VarChar(50)
  badgeVariant String?      @db.VarChar(50)
  category    String?       @db.VarChar(50)
  capacity    String?       @db.VarChar(50)
  cart_items  cart_items[]
  order_items order_items[]
}

model users {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(100)
  email         String   @unique(map: "email") @db.VarChar(100)
  password_hash String   @db.VarChar(255)
  is_admin      Boolean? @default(false)
  carts         carts[]
  orders        orders[]
}
