generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cart_items {
  id         Int      @id @default(autoincrement())
  cart_id    Int
  product_id Int
  quantity   Int
  carts      carts    @relation(fields: [cart_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "cart_items_ibfk_1")
  products   products @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cart_items_ibfk_2")

  @@index([cart_id], map: "cart_id")
  @@index([product_id], map: "product_id")
}

model carts {
  id         Int          @id @default(autoincrement())
  user_id    Int
  created_at DateTime?    @default(now()) @db.Timestamp(0)
  cart_items cart_items[]
  users      users        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "carts_ibfk_1")

  @@index([user_id], map: "user_id")
}

model order_items {
  id                Int      @id @default(autoincrement())
  order_id          Int
  product_id        Int
  quantity          Int
  price_at_purchase Decimal  @db.Decimal(10, 2)
  orders            orders   @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "order_items_ibfk_1")
  products          products @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_items_ibfk_2")

  @@index([order_id], map: "order_id")
  @@index([product_id], map: "product_id")
}

model orders {
  id           Int           @id @default(autoincrement())
  user_id      Int
  total_amount Decimal       @db.Decimal(10, 2)
  status       String?       @default("pending") @db.VarChar(50)
  created_at   DateTime?     @default(now()) @db.Timestamp(0)
  order_items  order_items[]
  users        users         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orders_ibfk_1")

  @@index([user_id], map: "user_id")
}

model products {
  id              Int           @id @default(autoincrement())
  name            String        @db.VarChar(100)
  description     String?       @db.Text
  price           Decimal       @db.Decimal(10, 2)
  image_url       String?       @db.VarChar(255)
  quality         String?       @db.VarChar(50)
  size            String?       @db.VarChar(50)
  stock           Int?          @default(0)
  rating          Float?        @default(0)
  reviews         Int?          @default(0)
  badge           String?       @db.VarChar(50)
  badgeVariant    String?       @db.VarChar(50)
  category        String?       @db.VarChar(50)
  capacity        String?       @db.VarChar(50)
  is_featured     Boolean?      @default(false)
  is_new          Boolean?      @default(false)
  discount_percent Decimal?     @db.Decimal(5, 2) 
  sale_price      Decimal?      @db.Decimal(10, 2)
  on_sale         Boolean?      @default(false)
  sale_start_date DateTime?     @db.Timestamp(0)
  sale_end_date   DateTime?     @db.Timestamp(0)
  created_at      DateTime?     @default(now()) @db.Timestamp(0)
  updated_at      DateTime?     @updatedAt @db.Timestamp(0)
  cart_items      cart_items[]
  order_items     order_items[]
}

model users {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar(100)
  email         String          @unique(map: "email") @db.VarChar(100)
  password_hash String          @db.VarChar(255)
  is_admin      Boolean?        @default(false)
  created_at    DateTime?       @default(now()) @db.Timestamp(0)
  carts         carts[]
  orders        orders[]
  notifications notifications[]
}

model notifications {
  id         Int      @id @default(autoincrement())
  user_id    Int
  message    String   @db.VarChar(255)
  read       Boolean  @default(false)
  created_at DateTime @default(now()) @db.Timestamp(0)
  users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id])
}

model sale_banners {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(255)
  description String?   @db.Text
  image_url   String?   @db.VarChar(255)
  link_url    String?   @db.VarChar(255)
  is_active   Boolean?  @default(true)
  start_date  DateTime? @db.Timestamp(0)
  end_date    DateTime? @db.Timestamp(0)
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  updated_at  DateTime? @updatedAt @db.Timestamp(0)
}

model admin_settings {
  id    Int    @id @default(autoincrement())
  key   String @unique @db.VarChar(100)
  value String @db.Text
}
